=======================================================================
C:\Users\Ajmal Shaikh Mushtaq\Desktop\all assignments\social-post\server\connection\dbconnection.js

const mongoose = require("mongoose");

const connectDB = async () => {
  try {
    const mongoURI = "mongodb://127.0.0.1:27017/Posts";
    await mongoose.connect(mongoURI);
    console.log("Connected to MongoDB");
  } catch (error) {
    console.error("Error connecting to MongoDB:", error);
    process.exit(1);
  }
};

module.exports = connectDB;


=======================================================================
C:\Users\Ajmal Shaikh Mushtaq\Desktop\all assignments\social-post\server\models\post.js

const mongoose = require("mongoose");

const postSchema = new mongoose.Schema({
  id: Number,
  title: String,
  likes: Number,
  image: String,
  createdAt: { type: Date, default: Date.now },
});

const Post = mongoose.model("Post", postSchema);
module.exports = Post;


=======================================================================
C:\Users\Ajmal Shaikh Mushtaq\Desktop\all assignments\social-post\server\controller.js

const Post = require("./models/post");

const getPosts = async (req, res) => {
  try {
    let posts;

    const sortOption = req.query.sort || "newer";

    if (sortOption === "newer") {
      posts = await Post.find().sort({ createdAt: -1 });
    } else if (sortOption === "older") {
      posts = await Post.find().sort({ createdAt: 1 });
    } else {
      posts = await Post.find();
    }
    res.json(posts);
  } catch (error) {
    console.error("Error getting posts:", error);
    res.status(500).send("Internal Server Error");
  }
};

// Increment like count of a post
const incrementLike = async (req, res) => {
  const postId = req.params.id;

  try {
    console.log("Received request to increment like for post ID:", postId);
    const post = await Post.findOneAndUpdate({ postId });
    console.log("Found post:", post);

    if (!post) {
      return res.status(404).json({ message: "Post not found" });
    }

    post.likes += 1;
    await post.save();

    res.json({ message: "Like incremented successfully", post });
  } catch (error) {
    console.error("Error incrementing like:", error);
    res.status(500).send("Internal Server Error");
  }
};

module.exports = {
  getPosts,
  incrementLike,
};


=======================================================================
C:\Users\Ajmal Shaikh Mushtaq\Desktop\all assignments\social-post\server\index.js

const express = require("express");
const bodyParser = require("body-parser");
const cors = require("cors");
const connectDB = require("./connection/dbconnection");
const routes = require("./routes");

const app = express();
const PORT = 5000;

app.use(cors());
app.use(bodyParser.json());

connectDB();

app.use("/api", routes);

app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});


=======================================================================
C:\Users\Ajmal Shaikh Mushtaq\Desktop\all assignments\social-post\server\package.json

{
  "name": "backend",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "start": "nodemon index.js",
    "seed": "node seedData.js"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "cors": "^2.8.5",
    "express": "^4.18.2",
    "mongoose": "^8.1.0",
    "nodemon": "^3.0.3"
  }
}


=======================================================================
C:\Users\Ajmal Shaikh Mushtaq\Desktop\all assignments\social-post\server\routes.js

const express = require("express");
const router = express.Router();
const postController = require("./controller");

// Get all posts
router.get("/posts", postController.getPosts);

// Increment like count for a post
router.put("/posts/:id/like", postController.incrementLike);

module.exports = router;


=======================================================================
C:\Users\Ajmal Shaikh Mushtaq\Desktop\all assignments\social-post\server\seedData.js

// seedData.js
const connectDB = require("./connection/dbconnection");
const Post = require("./models/post");
const dummyData = require("./dummyData.json");

async function seedData() {
  try {
    await connectDB();
    await Post.insertMany(dummyData);
    console.log("Dummy data seeded successfully");
    process.exit(0);
  } catch (error) {
    console.error("Error seeding dummy data:", error);
    process.exit(1);
  }
}

seedData();


